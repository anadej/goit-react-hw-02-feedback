{"version":3,"sources":["components/feedBack/FeedbackOptionStyled.js","components/feedBack/FeedbackOptions.js","components/notification/Notification.js","components/SectionStyled.js","components/Section.js","components/statistics/StatisticsStyled.js","components/statistics/Statistics.js","components/App.js","index.js"],"names":["FeedbackOptionsStyled","styled","div","FeedbackOptions","options","onLeaveFeedback","map","option","className","type","name","onClick","title","Notification","message","SectionStyled","section","Section","children","StatisticsStyled","ul","Statistics","good","neutral","bad","total","positivePercentage","App","state","e","target","console","log","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qYAEaA,EAAwBC,IAAOC,IAAV,2P,OCoBnBC,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAACL,EAAD,UACGI,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEC,UAAU,cACVC,KAAK,SACLC,KAAMH,EAAOG,KAEbC,QAASN,EALX,SAQGE,EAAOK,OAJHL,EAAOG,YCDPG,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGN,UAAU,eAAb,SAA6BM,OCHtBC,EAAgBd,IAAOe,QAAV,wGCUXC,EATC,SAAC,GAAyB,IAAvBL,EAAsB,EAAtBA,MAAOM,EAAe,EAAfA,SACxB,OACE,eAACH,EAAD,WACE,oBAAIP,UAAU,eAAd,SAA8BI,IAC7BM,MCLMC,EAAmBlB,IAAOmB,GAAV,6CCedC,EAdI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,eAACP,EAAD,WACE,qBAAIX,UAAU,gBAAd,mBAAqCc,KACrC,qBAAId,UAAU,gBAAd,sBAAwCe,KACxC,qBAAIf,UAAU,gBAAd,kBAAoCgB,KACpC,qBAAIhB,UAAU,gBAAd,oBAAsCiB,KACtC,qBAAIjB,UAAU,gBAAd,gCACsBkB,EADtB,W,QCmDSC,E,4MArDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPnB,gBAAkB,SAACwB,GACjB,IAAQnB,EAASmB,EAAEC,OAAXpB,KACRqB,QAAQC,IAAIH,GAEZ,EAAKI,UAAS,SAACC,GACb,OAAO,eACJxB,EAAOwB,EAAKxB,GAAQ,O,EAM3ByB,mBAAqB,kBACnB,EAAKP,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,K,EAGpDY,gCAAkC,kBAChCC,KAAKC,MAAO,EAAKV,MAAMN,KAAO,EAAKa,qBAAwB,M,4CAE7D,WAEE,IAAMV,EAAQc,KAAKJ,qBACbT,EAAqBa,KAAKH,kCAChC,OACE,qCACE,cAAC,EAAD,CAASxB,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,QAASA,EACTC,gBAAiBkC,KAAKlC,oBAG1B,cAAC,EAAD,CAASO,MAAM,aAAf,SACa,IAAVa,EACC,cAAC,EAAD,CAAcX,QAAQ,sBAEtB,cAAC,EAAD,2BACMyB,KAAKX,OADX,IAEEH,MAAOA,EACPC,mBAAoBA,c,GA7ChBc,IAAMC,W,MCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.26557da7.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FeedbackOptionsStyled = styled.div`\r\n  margin-left: 10px;\r\n  .feedbackBtn {\r\n    margin-right: 5px;\r\n    background-color: white;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n\r\n    &:active {\r\n      background-color: blue;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { FeedbackOptionsStyled } from \"./FeedbackOptionStyled\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <FeedbackOptionsStyled>\r\n      {options.map((option) => (\r\n        <button\r\n          className=\"feedbackBtn\"\r\n          type=\"button\"\r\n          name={option.name}\r\n          key={option.name}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {/* {option.title.charAt(0).toUpperCase() + option.title.slice(1)} */}\r\n          {option.title}\r\n        </button>\r\n      ))}\r\n    </FeedbackOptionsStyled>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p className=\"notification\">{message}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionStyled = styled.section`\r\n  margin: 20px 0 0 40px;\r\n  .sectionTitle {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SectionStyled } from \"./SectionStyled\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"sectionTitle\">{title}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StatisticsStyled = styled.ul`\r\n  margin: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport { StatisticsStyled } from \"./StatisticsStyled\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <StatisticsStyled>\r\n      <li className=\"statisticItem\">Good: {good}</li>\r\n      <li className=\"statisticItem\">Neutral: {neutral}</li>\r\n      <li className=\"statisticItem\">Bad: {bad}</li>\r\n      <li className=\"statisticItem\">Total: {total}</li>\r\n      <li className=\"statisticItem\">\r\n        Positive feedback: {positivePercentage}%\r\n      </li>\r\n    </StatisticsStyled>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport FeedbackOptions from \"./feedBack/FeedbackOptions\";\r\nimport Notification from \"./notification/Notification\";\r\nimport Section from \"./Section\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport options from \"../data/options.json\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = (e) => {\r\n    const { name } = e.target;\r\n    console.log(e);\r\n\r\n    this.setState((prev) => {\r\n      return {\r\n        [name]: prev[name] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  //подсчет общего количества feedback\r\n  countTotalFeedback = () =>\r\n    this.state.good + this.state.neutral + this.state.bad;\r\n\r\n  //подсчет процента положительных feedback\r\n  countPositiveFeedbackPercentage = () =>\r\n    Math.round((this.state.good / this.countTotalFeedback()) * 100);\r\n\r\n  render() {\r\n    //переменные для передачи данных в компонент Statistics\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={options}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total === 0 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              {...this.state}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}